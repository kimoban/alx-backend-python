pipeline {
    agent any

    environment {
        DJANGO_SETTINGS_MODULE = 'messaging_app.settings'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub-credentials')
        DOCKER_IMAGE = 'kimoban/messaging_app:latest'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'github-credentials', url: 'https://github.com/kimoban/alx-backend-python.git'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('messaging_app') {
                    sh 'python -m venv venv'
                    sh '. venv/bin/activate && pip install -r requirements.txt'
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('messaging_app') {
                    sh '. venv/bin/activate && pytest --junitxml=test-report.xml'
                }
            }
        }

        stage('Generate Report') {
            steps {
                dir('messaging_app') {
                    junit 'test-report.xml'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('messaging_app') {
                    sh 'docker build -t $DOCKER_IMAGE .'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    sh 'echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin'
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }
    }

    post {
        always {
            dir('messaging_app') {
                archiveArtifacts artifacts: 'test-report.xml', allowEmptyArchive: true
            }
        }
    }
}
